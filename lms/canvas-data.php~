<?php
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//  Name: Threadz
//  Author: Matt Lewis
//  Organization: Eastern Washington University - Instructional Technology
//  Copyright: Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License
//  Version: 1.0
//  Page Description: This page connects to the Canvas LMS and saves topic and post discussion data into SESSION.
//  Embedded Into: launch.php
//  Uses: function.php
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

////Testing////
$current_token = "test test test";

////Testing////

    //Set the varibles needed to collect the API discussion data using the users own access token.
    //Client ID and Key were provided by Canvas (http://instructure.github.io/) after submitting
    //a Developer Key Request form (https://docs.google.com/a/instructure.com/forms/d/1C5vOpWHAAl-cltj2944-NM0w16AiCvKQFJae3euwwM8/viewform).
    //The domainThreadz variable matches the URI provided in the original form. Any redirects from the OAuth2 process must use this domain.
    $client_id = 100000000000259;
    $client_secret = "YTqwspRrLssojbwlzqVS60Ge6xgTQJSL7Z8KNwHZrHMJerkMXGGgXxwZODvJhJow";
    $client_uri = "https://secure.bluehost.com/~mclewisc/lti/threadz/";
    $domainThreadz= $client_uri;
    $_SESSION['domainThreadz'] = $domainThreadz;
    $post_count = 0;
    $select_list_option="";
    $array_title = "";
$_SESSION['postNum'] = 0;
empty($_SESSION['messageArray']);
unset($_SESSION['messageArray']);


    //$redirect_uri = $domainThreadz."threadz";
    //$url = $_SERVER['HTTP_REFERER'];
    //preg_match('~//(.*?)/~', $url, $outputDomain);
    //$domainCanvas = $outputDomain[1];
    //$domainCanvasAPI = $domainCanvas."/api/v1/";
    //if(empty($_SESSION['token_state_id'] )) $_SESSION['token_state_id'] = substr(str_shuffle(MD5(microtime())), 0, 5);
    //
    ////Course id provided back from lti launch data
    //$courseID = $_REQUEST['custom_canvas_course_id'];
    
    //Get the current access token if token is not yet set
    if(empty($current_token)){
        header('Location: '. $domainCanvas.'/login/oauth2/auth?client_id='.$client_id.'&response_type=code&redirect_uri='.$redirect_uri.'&state='.$_SESSION['token_state_id']);
        
        //Redirect retuns the state and code variables.
        $state_test = $_REQUEST['state'];
        $code = $_REQUEST['code'];
        $error = $_REQUEST['error'];
      
        if($error){
            echo "Access Denied";
            exit();
        }
        //Check to make sure the state passed into the auth request is the same one returned.
        if($state == $state_test){
            //Post request with client_id, client_secret, and code (returned from above redirect) to /login/oauth2/token to obtain access token.
            $token_url = $domainCanvas.'/login/oauth2/token';
            $token_data = array('client_id' => $client_ID, 'redirect_uri' => $redirect_url, 'client_secret' => $client_secret, 'code' => $code);    
            $token_token_options = array(
                // use key 'http' even if you send the request to https://...
                'http' => array(
                    'header'  => "Content-type: application/x-www-form-urlencoded\r\n",
                    'method'  => 'POST',
                    'content' => http_build_query($token_data),
                ),
            );


            $context  = stream_context_create($token_options);
            $result = file_get_contents($token_url, false, $context);

            //// save token into variable
            $jsonToken = json_decode($result, true);
            $current_token = $jsonToken['access_token'];
        }else{
            echo "Alter State.";
            exit();
        }
    }

    //Collect the list of discussion topics and data for the course, then collect the post data for each discussion.
    //This data will then be used on the chart/graph pages with the D3.js library.
    //By collecting all the data, there is no need to keep the access token saved into SESSION.

    if($current_token){
        //$urlTopics = "https://".$domainCanvasAPI."courses/".$courseID."/discussion_topics.json?access_token=". $current_token;
        $urlTopics = "https://secure.bluehost.com/~mclewisc/lti/threadz/topics.json";
        $dataTopics = file_get_contents($urlTopics);
        $jsonTopics = json_decode($dataTopics, true);
        
        //Save json Data of all course discussion topics into SESSION
        $_SESSION['jsonTopics'] = $jsonTopics;
        //Step through each json record, saving data into SESSION
        foreach($jsonTopics as $topic){
            $topic_id = $topic['id'];
            $topic_title = $topic['title'];
            //$urlTopic = "https://".$domainCanvasAPI."courses/".$courseID."/discussion_topics/".$topic_id."/view.json?access_token=". $current_token;
            $urlTopic = "https://secure.bluehost.com/~mclewisc/lti/threadz/posts.json";
            $dataPosts = file_get_contents($urlTopic);
            $jsonData = json_decode($dataPosts, true);

            //save individual discussion topic post data into SESSION using the topic id as the variable name
            $_SESSION['json_'.$topic_id] = $jsonData;
            $arrTopic[$topic_id] = array(
                'json' => $jsonData,
                'topic_id'=> $topic['id'],
                'published'=> $topic['published'],
                'topic_title' => $topic_title,
                'message' => $topic['message'],
                'author_id' => $topic['author']['id'],
                'topic_url' => $topic['url'],
                'assignment_id' => $topic['assignment_id'],
                'discussion_type' => $topic['discussion_type'],
                'topic_subentry_count' => $topic['discussion_subentry_count'],
                'topic_word_count' => 0
            );
            
            //save abridged topic data into SESSION
            $_SESSION['arrTopics'] = $arrTopic;
            
            //create HTML display Topic list for published discussions.
            if($arrTopic[$topic_id]['published'] == true){
                $select_list_option.= "<option value='".$topic_id."'>".$topic_title."</option>";
            }
        }
    }
?>